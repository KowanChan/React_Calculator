{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kowan\\\\ReactProjects\\\\calculator\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [calc, setCalc] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const ops = [\"+\", \"-\", \"/\", \"x\", \".\"];\n\n  const updateCalc = value => {\n    if (ops.includes(value) && calc === '' || ops.includes(value) && ops.includes(calc.slice(-1))) {\n      return;\n    }\n\n    setCalc(calc + value);\n  };\n\n  const createDigits = () => {\n    const digits = [];\n\n    for (let i = 1; i < 10; i++) {\n      digits.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateCalc(i.toString()),\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 19\n      }, this));\n    }\n\n    return digits;\n  };\n\n  const createOps = () => {\n    const opsButt = [];\n\n    for (let i = 0; i < 4; i++) {\n      opsButt.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateCalc(ops[i]),\n        children: ops[i]\n      }, ops[i], false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 20\n      }, this));\n    }\n\n    opsButt.push( /*#__PURE__*/_jsxDEV(\"button\", {\n      children: DEL\n    }, \"del\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 18\n    }, this));\n    return opsButt;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CalcDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display\",\n        children: [result ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"(0)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this) : '', calc || \"0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ops\",\n        children: createOps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dig\",\n        children: [createDigits(), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateCalc(\"0\"),\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateCalc(\".\"),\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateCalc(),\n          children: \"=\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9U/d6CHR7WUh3xAyDzH68Kd1wgs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Kowan/ReactProjects/calculator/src/App.js"],"names":["useState","App","calc","setCalc","result","setResult","ops","updateCalc","value","includes","slice","createDigits","digits","i","push","toString","createOps","opsButt","DEL"],"mappings":"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","sourcesContent":["import { useState } from 'react';\n\nfunction App() {\n  const [calc, setCalc] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n\n  const ops = [\"+\",\"-\",\"/\",\"x\",\".\"];\n\n  const updateCalc = value =>{\n    if(\n      ops.includes(value) && calc === '' ||\n      ops.includes(value) && ops.includes(calc.slice(-1))\n      )\n    {\n      return;\n    }\n    setCalc(calc + value);\n  }\n\n  const createDigits = () => {\n    const digits = [];\n\n    for (let i= 1; i<10; i++) {\n      digits.push(<button key={i} onClick = {() => updateCalc(i.toString())} >{i}</button>)\n    }\n    return digits;\n  }\n\n  const createOps = () => {\n    const opsButt = [];\n\n    for (let i = 0; i<4; i++) {\n      opsButt.push(<button key = {ops[i]} onClick = {() => updateCalc(ops[i])}>{ops[i]}</button>)\n    }\n\n    opsButt.push(<button key = {\"del\"}>{DEL}</button>)\n    return opsButt;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className = \"CalcDiv\">\n        <div className = \"display\">\n          {result ? <span>(0)</span> : ''} \n          {calc || \"0\"}\n        </div>\n\n        <div className = \"ops\">\n            {createOps()}\n        </div>\n\n        <div className = \"dig\">\n          {createDigits()}\n          <button onClick = {() => updateCalc(\"0\")}>0</button>\n          <button onClick = {() => updateCalc(\".\")}>.</button>\n          <button onClick = {() => updateCalc()}>=</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}